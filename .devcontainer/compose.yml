services:

  ros:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        - ROS_DISTRO=${ROS_DISTRO}
        - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
        - USER_USERNAME=${USER_USERNAME}
        - USER_UID=${USER_UID}
        - USER_GID=${USER_GID}
        - USER_DIR=${USER_DIR}
        - WORKSPACE_DIR=${WORKSPACE_DIR}
        - ITOOLS=${ITOOLS}
        - IROSTOOLS=${IROSTOOLS}
        - IFRAMEWORKS=${IFRAMEWORKS}  
      target: dev
    
    # Network Mode Configuration
    network_mode: host                        # Utilize host network stack for seamless communication.
    ipc: host                                 # Shared memory transport with host, e.g. rviz GUIs

    # Deny access
    privileged: true
 
    # Linux Capabilities
    cap_add:
      - SYS_PTRACE                            # Allow process tracing capabilities to enable debugging, e.g. gdb, accessing gpu.

    # Security Options
    security_opt:
    - seccomp:unconfined                      # Disable Seccomp filtering to allow all system calls for toosl like gdb

    # Environment Variables
    environment:
      # Shell
      - SHELL=/bin/bash
      
      # Display
      - DISPLAY=${DISPLAY}                    # Specify X11 display server.

      # ROS
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}        # Define ROS domain ID for communication.
    
    env_file:
      - .env

    # Volume Configuration
    volumes:
      # Display 
      - /tmp/.X11-unix/${DISPLAY_NUM}:/tmp/.X11-unix/${DISPLAY_NUM}:rw          # Mounts X11 Socket.

      # SSH
      #- ${HOME}/.ssh/:${USER_DIR}/.ssh/                   # Mount ssh keys

      # Bash history
      - ${HOME}/.bash_history.docker:${USER_DIR}/.bash_history   # Mount bash commands history

      # User Source file
      - ../src/:${WORKSPACE_DIR}/src                      # Syncs the source Directory

      # VScode config files
      - ../.vscode:${WORKSPACE_DIR}/.vscode               # Mounts vscode config files

      # Devcontainer config files
      - ../.devcontainer:${WORKSPACE_DIR}/.devcontainer   # Mounts devcontainer config files

      # Mount usb devices
      - /dev:/dev:rw                                      # Mounts devices dynamically

      # Mount sound
      - /run/user/${USER_UID}/pulse:/run/user/1000/pulse  # Mount pulseaudio server socket

    device_cgroup_rules:
      # full access
      # add all usb devices 
      # - 'c *:* rwm'

      # fine grained access
      # add usb modems(ACM*)
      - 'c 166:* rwm'
      # add input devices(js*, mouse*, (mice, event*))
      - 'c 13:* rwm'
      # add usb serial converters(USB*)
      - 'c 188:* rwm'

    command: sleep infinity